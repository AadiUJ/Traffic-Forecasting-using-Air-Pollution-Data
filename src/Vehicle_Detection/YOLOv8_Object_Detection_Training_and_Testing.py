# -*- coding: utf-8 -*-
"""Vehicle_Detection_YoloV8_Training_with_custom_dataset_in_Drive.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SEMZ_8DDJPue71xVMww6QFQOAwsfBqdy
"""

from google.colab import drive
drive.mount('/content/Mydrive')

! pip install ultralytics

"""### Use of Custom Dataset

### Training

- After training process, go to (Model/yolov8_custom) look for confusion matrix, F1 curve etc. for training statistics
"""

#path to the training data
#it must be yaml file
#inside the yaml file correct paths must there
train_data = "/content/drive/Shareddrives/1:1 Aaditya Jhamb/Vehicle_Object_Detection/data.yaml"
#specify a saving path to save all the models and training statitics
#model_saving = "/content/drive/MyDrive/Model/yolov8_custom"
#Run the training script
! yolo task=detect mode=train model=yolov8s.pt data={train_data} epochs=10 imgsz=640 name={model_saving}

train_data = "/content/drive/Shareddrives/1:1 Aaditya Jhamb/Vehicle_Object_Detection/data.yaml"
model_saving = "/content/drive/MyDrive/Model/yolov8_custom"
learning_rate = 0.01
# Enclose the file path in double quotes
train_command = f"yolo task=detect mode=train model=yolov8s.pt data='{train_data}' epochs=200 lr0={learning_rate} imgsz=640 name='{model_saving}'"

# Run the training script
! {train_command}

"""### Validate with New Model

- All the validation results are saved to the google colab environment.
- You can view them under run/detect/val
"""

#best model weight is saved to saved location and under the weight folder, best.pt file can be found.
#that's the weight which will be used to predict
best_model = "/best.pt"

#run predictions on the validation data
! yolo task=detect mode=val model={best_model} data={train_data}

best_model = "/best.pt"

# Enclose the file paths in double quotes
val_command = f"yolo task=detect mode=val model='{best_model}' data='{test_data}'"
import shutil
# Source folder path (change to your source folder's path)
source_folder = 'runs/detect/val'

# Destination folder path in the shared drive (change to your destination path)
destination_folder = '/content/drive/MyDrive/Results/epochs200_lr0.01'

# Run the validation script
! {val_command}
# Copy the folder and its contents
shutil.copytree(source_folder, destination_folder)

"""### Predict with the custom model

- Test prediction data will be saved under run/detect/predict folder in google colab environment

### Save the best model

- Inside modal folder best.pt and last.pt files are there. They are the model weights of best and last check points. These can be used for later prediction
"""

#location of the test images
test_images = "/content/drive/MyDrive/Data/test/images"

#run prediction on test data
! yolo task=detect mode=predict model={best_model} conf=0.25 source={test_images}

import os
import shutil

train_data = "/content/drive/Shareddrives/1:1 Aaditya Jhamb/Vehicle_Object_Detection/data.yaml"
model_saving_base = "/content/drive/MyDrive/AIClub/ObjectDetection/HatDetection/Model/yolov8_custom"
learning_rates = [0.0005]
epochs_list = list(range(150, 301, 50))

# Loop through different epochs and learning rates
for learning_rate in learning_rates:
    for epoch in epochs_list:
        model_saving = f"{model_saving_base}_lr{learning_rate}_epoch{epoch}"

        # Enclose the file path in double quotes
        train_command = f"yolo task=detect mode=train model=yolov8s.pt data='{train_data}' epochs={epoch} lr0={learning_rate} imgsz=640 name='{model_saving}'"

        # Run the training script
        ! {train_command}

        # Get the path to the best model
        best_model = os.path.join(model_saving, "weights/best.pt")

        # Enclose the file paths in double quotes
        val_command = f"yolo task=detect mode=val model='{best_model}' data='{train_data}'"

        # Run the validation script
        ! {val_command}

        # Create a destination folder for validation results
        destination_folder = f'/content/drive/Shareddrives/1:1 Aaditya Jhamb/Results/lr{learning_rate}_epoch{epoch}'

        # Copy the validation results folder and its contents
        shutil.copytree('runs/detect/val', destination_folder)
